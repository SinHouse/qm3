--- make.common	2019-01-11 10:55:28.000000000 +0100
+++ make.common.new	2019-01-12 08:49:20.000000000 +0100
@@ -215,7 +215,11 @@
 ############################################################################
 # abbrev. for target linking
 define link-target
-$(LN) $(LNOPT) -o $@ $(filter-out _%,$^) $(L_LIBS) $(OTHERLIBS)
+#$(LN) $(LNOPT) -o $@ $(filter-out _%,$^) $(L_LIBS) $(OTHERLIBS)
+$(LN) $(LNOPT) -dynamiclib -o libdftb+.so *.o \
+	../../external/xmlf90/*.o \
+	../../external/dftd3/*.o \
+	-framework Accelerate
 endef
 
 # Include local makefile once again to override rules, defs and deferred vars

--- lib_common/globalenv.F90	2019-01-10 18:47:46.000000000 +0100
+++ lib_common/globalenv.F90.new	2019-01-10 18:47:58.000000000 +0100
@@ -39,7 +39,7 @@
 #:endif
 
   !> Unredirected standard out
-  integer, parameter :: stdOut0 = output_unit
+  integer, parameter :: stdOut0 = 999
 
   !> Whether code was compiled with MPI support
   logical, parameter :: withMpi = ${FORTRAN_LOGICAL(WITH_MPI)}$

--- lib_io/io.F90	2019-01-10 18:32:11.000000000 +0100
+++ lib_io/io.F90.new	2019-01-10 18:32:15.000000000 +0100
@@ -17,7 +17,7 @@
   integer, parameter :: stdIn = input_unit
 
   !> File id of standard output
-  integer, parameter :: stdOut = output_unit
+  integer, parameter :: stdOut = 999
 
   !> File id of standard error
   integer, parameter :: stdErr = error_unit

--- prg_dftb/dftbplus.F90	2019-01-10 18:32:34.000000000 +0100
+++ prg_dftb/dftbplus.F90.new	2019-01-12 08:38:55.000000000 +0100
@@ -7,22 +7,31 @@
 
 #:include 'common.fypp'
 
-program dftbplus
+subroutine qm3_dftbplus( siz, dat )
   use globalenv
   use environment
   use main, only : runDftbPlus
   use inputdata_module, only : inputData
   use formatout, only : printDftbHeader
   use parser, only : parseHsdInput
-  use initprogram, only : initProgramVariables
+!  use initprogram, only : initProgramVariables, energy, tForces, nAtom, derivs, &
+!                          nExtChrg, chrgForces, iAtInCentralRegion, q0, qOutput
+  use initprogram
+
   implicit none
 
+  integer, intent( in ) :: siz
+  real*8, dimension(0:siz-1), intent( out ) :: dat
+  integer :: i, j
+
   character(len=*), parameter :: releaseName = '${RELEASE}$'
   integer, parameter :: releaseYear = 2018
 
   type(TEnvironment) :: env
   type(inputData), allocatable :: input
 
+  open( unit=999, file="dftb_in.log", status="replace", action="write", form="formatted" )
+
   call initGlobalEnv()
   call printDftbHeader(releaseName, releaseYear)
   allocate(input)
@@ -31,7 +40,56 @@
   call initProgramVariables(input, env)
   deallocate(input)
   call runDftbPlus(env)
+
+  if( siz >= natom + 1  ) then
+    dat(0) = energy%etotal
+    do i = 1, size( iatincentralregion )
+      j = iatincentralregion( i )
+      dat(j) = sum( q0(:, j, 1) - qoutput(:, j, 1) )
+    end do
+  end if
+  if( tForces .and. siz == ( 1 + 3 * ( natom + nextchrg ) + natom ) ) then
+    do i = 1, natom
+        j = natom + ( i - 1 ) * 3
+        dat(j+1) = derivs(1,i)
+        dat(j+2) = derivs(2,i)
+        dat(j+3) = derivs(3,i)
+    end do
+    do i = 1, nextchrg
+        j = natom + ( natom + i - 1 ) * 3
+        dat(j+1) = chrgforces(1,i)
+        dat(j+2) = chrgforces(2,i)
+        dat(j+3) = chrgforces(3,i)
+    end do
+  end if
+
   call env%destruct()
   call destructGlobalEnv()
 
-end program dftbplus
+deallocate( sccCalc, Img2CentCell, species, species0 )
+deallocate( coord, coord0 )
+deallocate( latVec, recVec, invLatVec )
+deallocate( cellVec, rCellVec, iCellVec, neighbourList )
+deallocate( nNeighbourSK, nNeighbourRep, iSparseStart, hubbU )
+deallocate( atomEigVal, referenceN0, mass, speciesMass )
+deallocate( ham, chargePerShell, over )
+deallocate( kPoint, KWeight, nEl )
+deallocate( UJ, nUJ, niUJ )
+deallocate( iUJ, Ef, indMovedAtom )
+deallocate( speciesName )
+deallocate( pGeoCoordOpt, pGeoLatOpt, pChrgMixer )
+deallocate( q0 )
+deallocate( qShell0, qInput, qOutput )
+deallocate( qInpRed )
+deallocate( qOutRed, qDiffRed, iEqOrbitals )
+deallocate( rhoPrim, ERhoPrim, h0 )
+deallocate( filling, Eband, TS, E0 )
+deallocate( HSqrReal )
+deallocate( SSqrReal, eigvecsReal, eigen )
+deallocate( derivs, chrgForces, excitedDerivs )
+deallocate( coord0Fold )
+deallocate( iAtInCentralRegion )
+
+  close( 999 )
+
+end subroutine qm3_dftbplus
