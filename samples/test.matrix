import qm3.maths.matrix
print( qm3.maths.matrix.version )
print( qm3.maths.matrix.norm( [ 1, 2, 3, 4 ] ) )
print( qm3.maths.matrix.dot_product( [1., .0, .0], [.0, 1., .0] ) )
print( qm3.maths.matrix.cross_product( [1., .0, .0], [.0, 1., .0] ) )
qm3.maths.matrix.mprint( qm3.maths.matrix.from_diagonal( [ 1 for i in range( 10 ) ], 10 ), 10, 10, "%3.1lf" )
qm3.maths.matrix.mprint( qm3.maths.matrix.from_upper_diagonal_rows( [5, 50, 25, 590, 262, 141], 3 ), 3, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.from_upper_diagonal_columns( [5, 50, 590, 25, 262, 141], 3 ), 3, 3 )
m = [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
qm3.maths.matrix.mprint( m, 3, 3 )
print( qm3.maths.matrix.get_row( m, 3, 3, 1 ) )
print( qm3.maths.matrix.get_column( m, 3, 3, 1 ) )
print( qm3.maths.matrix.det( m, 3 ) )
qm3.maths.matrix.mprint( qm3.maths.matrix.T( m, 3, 3 ), 3, 3 )
qm3.maths.matrix.add_row( m, 3, 3, [ 10, 11, 12 ] )
qm3.maths.matrix.mprint( m, 4, 3 )
qm3.maths.matrix.add_column( m, 4, 3, [ 13, 14, 15, 16 ] )
qm3.maths.matrix.mprint( m, 4, 4 )
qm3.maths.matrix.mprint( qm3.maths.matrix.mult( m, 4, 4, m, 4, 4 ), 4, 4 )
m = [ 1,2,7, 2,5,8, 7,8,15 ]
qm3.maths.matrix.mprint( m, 3, 3 )
val, vec = qm3.maths.matrix.diag( m, 3 )
print( val )
qm3.maths.matrix.mprint( vec, 3, 3 )
try:
    import _qm3.maths.matrix
    val, vec, flg = _qm3.maths.matrix.jacobi( m, 3 )
    print( flg, val )
    qm3.maths.matrix.mprint( vec, 3, 3 )
except:
    pass
qm3.maths.matrix.mprint( qm3.maths.matrix.mult( vec, 3, 3, qm3.maths.matrix.T( vec, 3, 3 ), 3, 3 ), 3, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.mult( vec, 3, 3, qm3.maths.matrix.mult(
qm3.maths.matrix.from_diagonal( val, 3 ), 3, 3, qm3.maths.matrix.T( vec, 3, 3 ), 3, 3 ), 3, 3 ), 3, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.inverse( m, 3, 3 ), 3, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.mult( m, 3, 3, qm3.maths.matrix.inverse( m, 3, 3 ), 3, 3 ), 3, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.inverse( [1.,2.,7.], 3, 1 ), 1, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.inverse( [1.,2.,7.], 1, 3 ), 3, 1 )
qm3.maths.matrix.add_row( m, 3, 3, [ 1,21,17 ] )
qm3.maths.matrix.mprint( m, 4, 3 )
p = qm3.maths.matrix.inverse( m, 4, 3 )
qm3.maths.matrix.mprint( p, 3, 4 )
qm3.maths.matrix.mprint( qm3.maths.matrix.mult( p, 3, 4, m, 4, 3 ), 3, 3 )
m = qm3.maths.matrix.T( m, 4, 3 )
qm3.maths.matrix.mprint( m, 3, 4 )
p = qm3.maths.matrix.inverse( m, 3, 4 )
qm3.maths.matrix.mprint( p, 4, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.mult( m, 3, 4, p, 4, 3 ), 3, 3 )
qm3.maths.matrix.mprint( qm3.maths.matrix.mult( qm3.maths.matrix.inverse( [ 1,2,7, 2,5,8, 7,8,15 ], 3, 3 ), 3, 3, [ 1, 2, 3 ], 3, 1 ), 3, 1 )
qm3.maths.matrix.mprint( qm3.maths.matrix.solve( [ 1,2,7, 2,5,8, 7,8,15 ], [ 1, 2, 3 ] ), 3, 1 )
