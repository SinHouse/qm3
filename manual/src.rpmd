\normalsize
\subsection[ring\_polymer]{ring\_polymer.py}

Module with some engines for minimizing "problem.template" child objects. Functions can be classified on
the kind of imformation used: zero-order (\func{downhill}: "func"), first-order (\func{steepest\_descent},
\func{adam}, \func{fire}, \func{l\_bfgs} and \func{conjugate\_gradient\_plus}: "func" and "grad") and second-order
(\func{baker} and \func{rfo}: "func", "grad" and "hess").\\
The function \func{conjugate\_gradient\_plus} is only available if the binary \_minimize.so is available.
This engine has three posible flavours for gradient conjugation: \parm{Fletcher-Reeves}, \parm{Positive Polak-Ribiere}
and \parm{Polak-Ribiere} (which defaults to).\\
The functions \func{baker} and \func{rfo} allow to follow an specific mode of the hessian (C-indexing \parm{follow\_mode}, for
transition states search), or to perform plain minimization (\parm{follow\_mode = -1}).\\
Finally, the class \func{stepped\_fire}  allows the FIRE engine to be stepped (user must
iterate each step of the minimization, allowing him to control what happens between each step).
\begin{pyglist}[language=python,fvset={frame=single}]
class model( molec )
    """
    define as much engines as needed based on the molec
    """

    def get_grad( molec )
        """
        sequencially accumulate all the engines.get_grad
        """

class md_template
    """
    setup a molecule (with masses):     self.mole
    setup a working model:              self.engn
    setup the active atoms:             self.sele
    setup the problem size:             self.size = 3 * len( self.sele )
    map the active coordinates on:      self.coor
    map the active masses on:           self.mass
    """

    def current_step( istep )

    def setup( pi_atoms, num_beads = 8, temperature = 300.0 )

    def current_temperature()

    def integrate( step_size = 0.001, step_number = 1000, gamma_factor = 50.0,
        print_frequency = 100, log_function = default_log )
\end{pyglist}

\footnotesize
\begin{pyglist}[language=python,fvset={frame=single}]
#SOURCE@../samples/test.rpmd
\end{pyglist}

\begin{pyglist}[fvset={frame=single}]
#SOURCE@../samples/logs/test.rpmd.log
\end{pyglist}
