\normalsize
\subsection[free\_energy]{free\_energy.py}
This module provides functions and methods for free energy integration.\\
The function \func{fep\_integrate} evaluates the Helmholtz free energy from a list of energy
differences (\parm{dene}: $\left\langle H_{i+1} - H_{i} \right\rangle_{i}$) for a given temperature (\parm{temperature}).
In addition, it returns the statistical error associated, as well as the sampling ratio and the autocorrelation of the data.
It also allows to perform clustering on the energy differences (as much as \parm{clusters} clusters, obtained by \parm{tries} iterations/tries).\\
The function \func{bennett\_acceptance\_ratio} returns also the Helmholtz free energy, provided the forward ($\left\langle H_{i+1} - H_{i} \right\rangle_{i}$) and reverse ($\left\langle H_{i} - H_{i+1} \right\rangle_{i+1}$) differences of two states (i, i+1). This method is intended to be more robust than the direct fep integration without clustering, but needs both forward and reverse calculations.\\
The classes \func{umbint} and \func{wham} allow to integrafe 1D-PMF data (\parm{data} is a list containing the name of the data files). The first
(and fastest) one is based on a themodynamic integration approach\footnote{https://aip.scitation.org/doi/10.1063/1.2052648}, meanwhile the second performs formal WHAM integration\footnote{https://www.sciencedirect.com/science/article/pii/S0010465500002150}.
The format of the data files for 1D-PMF must be:
\begin{pyglist}[fvset={frame=single}]
Force_constant      Reference_value
Current_value
[...]
Current_value
\end{pyglist}
The class \func{umbint\_2d} allows to use the umbrella integration for 2D-PMF (even with unsampled regions...), by means of finite elements\footnote{https://aip.scitation.org/doi/10.1063/1.3175798}.
The format of the data files for 2D-PMF must be:
\begin{pyglist}[fvset={frame=single}]
Force_constant_1      Reference_value_1      Force_constant_2      Reference_value_2
Current_value_1       Current_value_2
[...]
Current_value_1       Current_value_2
\end{pyglist}
Finally, \func{plot\_data} allows to analyze the overlapping of a set of 1D-PMF
data whenever "matplotlib.pyplot" is available.
\begin{pyglist}[language=python,fvset={frame=single}]
def bennett_acceptance_ratio( forward, reverse, temperature = 300.0 )

def fep_integrate( dene, temperature = 300.0, clusters = 1, tries = 10 )

class umbint( data )
    def setup( nbins = None )
    def integrate( temp = 300.0 )

class wham( data )
    def setup( nbins = None )
    def integrate( temp = 300.0, maxit = 10000, toler = 1.0e-3 )

class umbint_2d( data ):
    def setup( nbins ):
    def integrate( temp = 300.0 )

def plot_data( data, dsigma = 2.0 )
\end{pyglist}

\footnotesize
\begin{pyglist}[language=python,fvset={frame=single}]
#SOURCE@../samples/test.free_energy
\end{pyglist}
\begin{pyglist}[fvset={frame=single}]
#SOURCE@../samples/logs/test.free_energy.log
\end{pyglist}
\begin{center}
\includegraphics[width=.4\textwidth]{15.png}
\includegraphics[width=.4\textwidth]{16.png}
\end{center}
