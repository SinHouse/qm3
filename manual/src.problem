\normalsize
\subsection[problem]{problem.py}
This module contains a base template clase (\func{template}) which ensures that all the minimum required
methods are defined on inheritance (\func{current\_step}, \func{get\_func}, \func{get\_grad} and \func{get\_hess}).
In addition, it provides two methods for calculating both the gradient vector and hessian matrix from finite differences
(\func{num\_grad} and \func{num\_hess}).
\begin{pyglist}[language=python,fvset={frame=single}]
class template()
    size = 0
    coor = []
    func = 0.0
    grad = []
    hess = []
    def current_step( istep )
    def get_func()
    def get_grad()
    def get_hess()
    def num_grad( dsp = 1.e-4, central = True )
    def num_hess( dsp = 1.e-4, central = True )
\end{pyglist}
Apart from the \func{get\_*} methods, the class provides the corresponding variables: \func{func}, \func{grad} and \func{hess} for being read after a method call, and the variables \func{coor} and \func{size} (equal to "coor" length), which must be set properly.
\footnotesize
\begin{pyglist}[language=python,fvset={frame=single}]
#SOURCE@../samples/test.problem
\end{pyglist}
\begin{pyglist}[fvset={frame=single}]
#SOURCE@../samples/logs/test.problem.log
\end{pyglist}
